services:
  bot:
    image: bot:latest
    build: .

    container_name: pushups-bot
    command: ["python", "bot/main.py"]

    working_dir: /app/src

    environment:
      - PYTHONPATH=/app/src

    depends_on:
      db:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
        restart: true

    develop:
      watch:
      - action: sync+restart
        path: .
        target: /app
        ignore:
          - .venv/
      - action: rebuild
        path: ./uv.lock
  
  worker:
    image: bot:latest
    
    container_name: pushups-worker
    command: ["taskiq", "worker", "worker.main:broker"]

    working_dir: /app/src

    environment:
      - PYTHONPATH=/app/src
    
    depends_on:
      db:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
        restart: true
  
  scheduler:
    image: bot:latest

    container_name: pushups-scheduler
    command: ["taskiq", "scheduler", "worker.main:scheduler"]

    working_dir: /app/src

    environment:
      - PYTHONPATH=/app/src
    
    depends_on:
      db:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
        restart: true
  
  prestart:
    image: bot:latest
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
    command: sh ./prestart.sh
    env_file:
      - .env
    build:
      context: .
  
  redis:
    container_name: pushups-redis
    image: redis:7-bookworm
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
  
  db:
    image: postgres:17-bookworm
    container_name: pushups-db
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  redis_data:
  pg_data:
